name: Docker Build and Release

on:
  push:
    tags:
      - '*'
  workflow_dispatch:
    inputs:
      tag:
        description: 'Specify the tag to build and release'
        required: true
      name:
        description: 'Specify the name of this release'
        required: true
      body:
        description: 'Describe for this release'
        required: false

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
    - name: Get tag name
      id: get_tag_name
      run: |
        if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
          echo "Manually"
          echo "TAG_NAME=${{ github.event.inputs.tag }}" >> $GITHUB_OUTPUT
        else
          echo "On push"
          echo "TAG_NAME=${{ github.ref_name }}" >> $GITHUB_OUTPUT
        fi

    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        ref: ${{ steps.get_tag_name.outputs.TAG_NAME }}

    - name: Set release name
      id: set_release_name
      run: |
        if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
          echo "Manually"
          echo "RELEASE_NAME=${{ github.event.inputs.name }}" >> $GITHUB_OUTPUT
        else
          echo "On push"
          echo "RELEASE_NAME=${{ steps.get_tag_name.outputs.TAG_NAME }}" >> $GITHUB_OUTPUT
        fi
    - name: Get tag message
      id: get_tag_message
      run: |
        echo "TAG_MESSAGE=$(git tag -l --format='%(subject)' ${GITHUB_REF#refs/tags/})" >> $GITHUB_OUTPUT

    - name: Set body
      id: set_body
      run: |
        if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
          echo "Manually"
          echo "BODY=${{ github.event.inputs.body }}" >> $GITHUB_OUTPUT
        else
          echo "On push"
          echo "BODY=${{ steps.get_tag_message.outputs.TAG_MESSAGE }}" >> $GITHUB_OUTPUT
        fi

    - name: Build with Docker
      run: |
        mkdir output
        docker compose -f ./.devcontainer/docker-compose.yml build
        docker compose -f ./.devcontainer/docker-compose.yml up -d
        docker exec $(docker ps -q --filter name=latex) sh -c "cd /home/repository/src && llmk"
        docker cp $(docker ps -q --filter name=latex):/home/repository/src/main.pdf ./output/main.pdf

    - name: Upload release asset
      uses: softprops/action-gh-release@v2.0.2
      with:
        files: |
          ./output/main.pdf
        tag_name:
          ${{ steps.set_tag.outputs.TAG_NAME }}
        name:
          ${{ steps.set_release_name.outputs.RELEASE_NAME }}
        body:
          ${{ steps.set_body.outputs.BODY }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
